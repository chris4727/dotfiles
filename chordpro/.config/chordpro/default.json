# ==  CHORDPRO DEFAULT  =====================================
#  Requires:
#	- ChordPro
#=================================================

# ==  SETTINGS  ==================================

# ---  GENERAL  ----------------------------------

settings.strict : true # Chord parsing Strict (only known chords) or relaxed (anything that looks sane)

# settings.transcode : "" # Transcode chords. "" = no transcode.

# settings.decapo : false # Eliminate capo by transposing chords.

# settings.chordnames : strict # Strictness of parsing chord names.

# settings.truesf : false # Substitute Unicode sharp/flats in chord names.

# ---  METADATA  ----------------------------------

// For these keys you can use {meta key ...} as well as {key ...}.
// Important: "title" and "subtitle" must always be in this list.

# user.name : "" # Short user name.
# user.fullname : "" # Full user name

// User defined chords (placeholder).
// This is an array of hashes, one for each chord.
// Each hash should contain the following fields:
//   "name":    name of the chord
//   "base":    base fret (optional, defaults to 1)
//   "frets":   the frets (optional, use 0 for an empty string,
//              and -1 or "x" for a muted string)
//   "fingers": finger positions (optional)
//   "display": (optional) can be used to change the way the chord is displayed

// Note that chords are always appended, you do not need "append".
// Example: Alternative for Bes chord.
# chords: [ { name: Bes, frets: [ 1 1 3 3 3 1 ], fingers: [ 1 1 2 3 4 1 ] } ]

diagrams.show : user # Show chord diagrams: all user or none. Default is all.

diagrams.sorted : true # Sorts chord diagrams by key
# "false" Sorts chord diagrams by order of appearance (default)


# ---  PDF OUTPUT  ----------------------------------

// PDF Properties. Arbitrary key/values may be added.
// Note that the context for substitutions is the first song.

# pdf.info.title : "%{title}" # Document title.

pdf.info.author : "chris4727" # Name of the author.

# pdf.info.subject : "" # Document subject.

# pdf.info.keywords : "" # Document keywords.

pdf.papersize : letter # Output paper size a4, letter, [595,842]


# ---  THEME  ----------------------------------

# pdf.theme.foreground : black         # Foreground colour. Usually black.
# pdf.theme.foreground-medium : grey70 # Light foreground colour
# pdf.theme.foreground-light : grey90  # Very light foreground colour
# pdf.theme.background : none          # Background colour. Usually white.

# pdf.front-matter : ""                          # PDF file to add as front matter.
# pdf.back-matter : ""                           # PDF file to add as back matter.

# pdf.margintop : 80                   # Page top margin, excluding headspace.
# pdf.marginbottom : 40                # Page bottom margin, excluding footspace.
# pdf.marginleft : 40                  # Page left margin.
# pdf.marginright : 40                 # Page right margin.
# pdf.headspace : 60                   # Space for page titles.
# pdf.footspace : 20                   # Space for page footers.
# pdf.head-first-only : false          # Heading on first page only

### Baseline distances as a factor of the font size.

# pdf.spacing.title : 1.2              # Spacing for page titles.
# pdf.spacing.lyrics : 1.2             # Spacing for lyrics.
# pdf.spacing.chords : 1.2             # Spacing for chord names.
# pdf.spacing.diagramchords : 1.2      # Spacing for diagram chords.
# pdf.spacing.grid : 1.2               # Spacing for grid lines.
# pdf.spacing.tab : 1                  # Spacing for tab lines.
# pdf.spacing.toc : 1.4                # Spacing for table of contents lines.

### Appearance of chorus.

# pdf.chorus.indent : 0                # Indent of the chorus, not including bar.

### Appearance of side bar.

# pdf.chorus.bar.offset : 8            # Bar offset to the left of the text. Suppress when zero.
# pdf.chorus.bar.width : 1             # Bar width. Suppress when zero.
# pdf.chorus.bar.color : foreground    # Bar colour.
# pdf.chorus.tag : Chorus              # Label for Chorus.

### Appearance of chorus recall.

# pdf.chorus.recall.choruslike : false # Quote the chorus like a chorus.
# pdf.chorus.recall.tag : Chorus       # Label for recalled chorus.
# pdf.chorus.recall.type : comment     # Font for tag text.

### Margin labels.

## Alternatively, render labels as comments.
# pdf.labels.comment : "" # Values are "comment", "comment_italic" and "comment_box".

### Appearance of chord diagrams for string instruments.

## A chord diagram consists of a number of cells.
## Cell dimensions are specified by "width" and "height".
## The horizontal number of cells depends on the number of strings.
## The vertical number of cells is "vcells", which should
## be 4 or larger to accommodate most chords.
## The horizontal distance between diagrams is "hspace" cells.
## The vertical distance is "vspace" cells.
pdf.diagrams.show : bottom # "top", "bottom" or "right" side of the first page, or "below" the last song line.
pdf.diagrams.align : left # "left" (default), "right", "center" and "spread".
# pdf.diagrams.width : 6                         # Width of each diagram cell.
# pdf.diagrams.height : 6                        # Height of each diagram cell.
# pdf.diagrams.vcells : 4                        # The number of frets shown.
# pdf.diagrams.linewidth : 0.1                   # Thickness of the diagram lines as a fraction of 'width'.
# pdf.diagrams.nutwidth : 5                      # Thickness of the top nut, in 'linewidth'.
# pdf.diagrams.hspace : 3.95                     # Horizontal space between diagrams.
# pdf.diagrams.vspace : 3                        # Vertical space between diagrams.
# pdf.diagrams.dotsize : 0.8                     # Size of the fret dot, fraction of cell width.
# pdf.diagrams.barwidth : 0.8                    # Thickness of bars, fraction of dot width.
# pdf.diagrams.fingers : true                    # Show finger settings, if available.

### Appearance of chord diagrams for keyboards.

## A keyboard diagram consists of a number of keys.
## Dimensions are specified by "width" and "height".
## The horizontal distance between diagrams is "hspace" * "keys" * "width".
##
## Diagrams for all chords of the song can be shown at the
## "top", "bottom" or "right" side of the first page,
## or "below" the last song line.

pdf.kbdiagrams.show : bottom
pdf.kbdiagrams.align : left                      # "left" (default), "right", "center" and "spread".

# pdf.kbdiagrams.width : 4                       # Width of a single (white) key.
# pdf.kbdiagrams.height : 20                     # Height of the diagram.
# pdf.kbdiagrams.keys : 14                       # The number of white keys shown.
# pdf.kbdiagrams.base : C                        # The leftmost white key. Must be "C" or "F".
# pdf.kbdiagrams.linewidth : 0.1                 # Thickness of the diagram lines as a fraction of "width".
# pdf.kbdiagrams.pressed : foreground-medium     # Color of the 'pressed' keys.
# pdf.kbdiagrams.hspace : 3.95                   # Horizontal space between diagrams.
# pdf.kbdiagrams.vspace : 0.3                    # Vertical space between diagrams.

### Grid section lines.

# pdf.grids.cellbar.width : 0                    # Width of the cell bar.
# pdf.grids.cellbar.color : foreground-medium
# pdf.grids.show : true
pdf.grids.symbols.color : foreground
pdf.grids.volta.color : foreground # Colour of the volta.

# pdf.even-odd-pages : 1                         # Even/odd pages (1), odd/even (-1) or odd (0).
# pdf.pagealign-songs : 1                        # Align songs to even/odd pages. When greater than 1, force alignment.

### How to reorder pages.

## Sort pages by "title", "subtitle", "2page", "compact", "desc".
## "sort-pages" is a comma separated list of the options above.
## title  : sort pages alphabetically by title.
## subtitle : sort pages alphabetically by subtitle. If this is
##          used together with title, only title is used.
## 2page :  make sure songs with even pages are placed on even
##          pages, so most. if not all, of the song is visible
##          in a normal book without needing to turn a page.
##          A blank page is added to align.
## compact: implies 2page - instead of adding a blank page,
##          an odd-paged song is moved in front of this song to achieve
##          even page alignment.
##          Note: this option requires extra processing time since
##          the songbook has to be processed twice.
## desc :   modifier to sort descending.

# pdf.sort-pages : ""

### Formats.

## Pages have two title elements and one footer element. They also
## can have a page of an existing PDF file as underlay (background).
## Topmost is "title". It uses the "title" font as defined further below.
## Second is "subtitle". It uses the "subtitle" font.
## The "footer" uses the "footer" font.
## All elements can have three fields, that are placed to the left side,
## centered, and right side of the page.
## The contents of all fields is defined below. You can use metadata
## items in the fields as shown. By default, the "title" element shows the
## value of metadata item "title", centered on the page. Likewise
## "subtitle".
## NOTE: The "title" and "subtitle" page elements have the same names
## as the default metadata values which may be confusing. To show
## metadata item, e.g. "artist", add its value to one of the
## title/subtitle fields. Do not try to add an artist page element.
## 
## The left, center and right parts are for odd pages.
## On even pages, the left and right parts are swapped.
## It is possible to define distinct even page formats with "default-even",
## "title-even" and "first-even".
##    
## When a background document is specified, with odd/even printing,
## the 1st background page is used for left pages and
## the next page (if it exists) for right pages.
## For even/odd printing, the order is reversed.

# pdf.formats.default.title : [ "" "" "" ]       # Three-part title format specification, left, center, right.
# pdf.formats.default.subtitle : [ "" "" "" ]    # Three-part title format specification, left, center, right.
# pdf.formats.default.footer : [ "%{title}" "" "%{page}" ] # Three-part title format specification, left, center, right.
# pdf.formats.default.background : ""            # Background page.
## The first page of a song has:
# pdf.formats.title.title : [ "" "%{title}" "" ] # Three-part title format specification, left, center, right.
# pdf.formats.title.subtitle : [ "" "%{subtitle}" "" ] # Three-part title format specification, left, center, right.
# pdf.formats.title.footer : [ "" "" "%{page}" ] # Three-part title format specification, left, center, right.
# pdf.formats.title.background : ""              # Background page.
## The very first output page is slightly different:
# pdf.formats.first.footer : [ "" "" "" ]        # Three-part title format specification, left, center, right.
## Background page
# pdf.formats.first.background : ""
# pdf.formats.filler.title : [ "" "" "" ]        # Three-part title format specification, left, center, right.
# pdf.formats.filler.subtitle : [ "" "" "" ]     # Three-part title format specification, left, center, right.
# pdf.formats.filler.footer : [ "" "" "" ]       # Three-part title format specification, left, center, right.
# pdf.formats.filler.background : ""             # Background page.

// Split marker for syllables that are smaller than chord width.
// split-marker is a 3-part array: "start", "repeat", and "final".
// "final" is always printed, last.
// "start" is printed if there is enough room.
// "repeat" is printed repeatedly to fill the rest.
// If split-marker is a single string, this is "start".
// All elements may be left empty strings.
# pdf.split-marker : [ "" "" "" ]

// Font families and properties.
// "fontconfig" maps members of font families to physical fonts.
// Optionally, additional properties of the fonts can be specified.
// Physical fonts can be the names of TrueType/OpenType fonts,
// or names of built-in fonts (corefonts).
// Relative filenames are looked up in the fontdir.
// For example:
// "fontdir" : [ "/usr/share/fonts/liberation", "/home/me/fonts" ]
# pdf.fontdir : []

// Remap corefonts to better fonts. null = if possible.
# pdf.corefonts.remap         : null

// IMPORTANT: THE ENTRY WITH THE TRAILING . DENOTES THE REGULAR FONT.

// The font families.
# pdf.fontconfig.serif.           : Times-Roman
# pdf.fontconfig.serif.bold       : Times-Bold
# pdf.fontconfig.serif.italic     : Times-Italic
# pdf.fontconfig.serif.bolditalic : Times-BoldItalic

# pdf.fontconfig.times.           : Times-Roman
# pdf.fontconfig.times.bold       : Times-Bold
# pdf.fontconfig.times.italic     : Times-Italic
# pdf.fontconfig.times.bolditalic : Times-BoldItalic

# pdf.fontconfig.helvetica.            : Helvetica
# pdf.fontconfig.helvetica.bold        : Helvetica-Bold
# pdf.fontconfig.helvetica.oblique     : Helvetica-Oblique
# pdf.fontconfig.helvetica.boldoblique : Helvetica-BoldOblique

# pdf.fontconfig.sans.           : Helvetica
# pdf.fontconfig.sans.bold       : Helvetica-Bold
# pdf.fontconfig.sans.italic     : Helvetica-Oblique
# pdf.fontconfig.sans.bolditalic : Helvetica-BoldOblique

# pdf.fontconfig.sans-serif.           : Helvetica
# pdf.fontconfig.sans-serif.bold       : Helvetica-Bold
# pdf.fontconfig.sans-serif.italic     : Helvetica-Oblique
# pdf.fontconfig.sans-serif.bolditalic : Helvetica-BoldOblique

# pdf.fontconfig.courier.           : Courier
# pdf.fontconfig.courier.bold       : Courier-Bold
# pdf.fontconfig.courier.italic     : Courier-Oblique
# pdf.fontconfig.courier.bolditalic : Courier-BoldOblique

# pdf.fontconfig.mono.           : Courier
# pdf.fontconfig.mono.bold       : Courier-Bold
# pdf.fontconfig.mono.italic     : Courier-Oblique
# pdf.fontconfig.mono.bolditalic : Courier-BoldOblique

# pdf.fontconfig.monospace.           : Courier
# pdf.fontconfig.monospace.bold       : Courier-Bold
# pdf.fontconfig.monospace.italic     : Courier-Oblique
# pdf.fontconfig.monospace.bolditalic : Courier-BoldOblique

// "fonts" maps output elements to fonts as defined in "fontconfig".
// The elements can have a background colour associated.
// Colours are "#RRGGBB" or predefined names like "black", "white",
// and lots of others.
// NOTE: In the built-in config we use only "name" since that can
// be overruled with user settings.
// 
// Some element mappings can be specified, but need not since
// they default to other elements.
// subtitle       --> text
// chorus         --> text
// comment        --> text
// comment_italic --> chord
// comment_box    --> chord
// annotation     --> chord
// toc            --> text
// grid           --> chord
// grid_margin    --> comment
// footer         --> subtitle @ 60%
// empty          --> text
// diagram        --> comment
// diagram_base   --> text (but at a small size)

// Font for typesetting titles.
# pdf.fonts.title : "serif bold 14"

// Font for typesetting lyrics.
# pdf.fonts.text : "serif 12"

// Font for typesetting chord names.
# pdf.fonts.chord : "sans italic 10"

// Colour specification.
# pdf.fonts.chordfingers.numbercolor : background

// Font for typesetting comment text.
# pdf.fonts.comment.name       : Sans
# pdf.fonts.comment.size       : 12
# pdf.fonts.comment.background : foreground-light

// Font for typesetting italised comment text.
# pdf.fonts.comment_italic : "Helvetica-Oblique 12"

// Font for typesetting boxed comment text.
# pdf.fonts.comment_box.name  : Sans
# pdf.fonts.comment_box.size  : 12
# pdf.fonts.comment_box.frame : 1

// Font for typesetting tabs.
# pdf.fonts.tab : "mono 10"

// Font for typesetting the table of contents.
# pdf.fonts.toc : "serif 11"

// Font for typesetting grids.
# pdf.fonts.grid : "sans 10"

// Settings for A2Crd (input) frontend.

// Treat leading lyrics lines as title/subtitle lines.
# a2crd.infer-titles : true

// Analysis strategy.
# a2crd.classifier : pct_chords

// Tab stop width for tab expansion. Set to zero to disable.
# a2crd.tabstop : 8

// Settings for the parser/preprocessor.
// For selected lines, you can specify a series of 
// { "target" : "xxx", "replace" : "yyy" }
// Every occurrence of "xxx" will be replaced by "yyy".
// Use "pattern" instead of "target" for regular expression replacement.
// Use wisely.
# parser.preprocess.all       : []
# parser.preprocess.directive : []
# parser.preprocess.songline  : []

